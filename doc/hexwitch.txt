*hexwitch.txt*    AI-powered colorscheme generator for Neovim

                            ˆˆW   ˆˆWˆˆWˆˆˆˆˆˆW ˆˆˆˆˆˆˆW
                            ˆˆQ   ˆˆQˆˆQˆˆTPPˆˆWˆˆTPPPP]
                            ˆˆQ   ˆˆQˆˆQˆˆˆˆˆˆT]ˆˆˆˆˆW
                            ZˆˆW ˆˆT]ˆˆQˆˆTPPˆˆWˆˆTPP]
                             ZˆˆˆˆT] ˆˆQˆˆˆˆˆˆT]ˆˆˆˆˆˆˆW
                              ZPPP]  ZP]ZPPPPP] ZPPPPPP]

                            AI-POWERED COLORSCHEME GENERATOR

==============================================================================
CONTENTS                                        *hexwitch-contents*

1. Introduction |hexwitch-introduction|
2. Requirements |hexwitch-requirements|
3. Installation |hexwitch-installation|
4. Configuration |hexwitch-configuration|
5. Usage |hexwitch-usage|
6. Commands |hexwitch-commands|
7. Functions |hexwitch-functions|
8. API Reference |hexwitch-api|
9. Troubleshooting |hexwitch-troubleshooting|
10. Health Check |hexwitch-health|

==============================================================================
1. INTRODUCTION                                            *hexwitch-introduction*

hexwitch.nvim is a Neovim plugin that generates custom colorschemes using
OpenAI's GPT models. Simply describe your desired theme in natural language,
and hexwitch will create and apply a beautiful color palette to your Neovim
editor.

Features:
~   " AI-powered theme generation using natural language
    " Persistent theme storage and management
    " Telescope integration for enhanced UI
    " Comprehensive syntax and UI highlight coverage
    " Built-in health checks and diagnostics

==============================================================================
2. REQUIREMENTS                                         *hexwitch-requirements*

- Neovim e 0.9.0
- `curl` (for HTTP requests)
- OpenAI API key
- `plenary.nvim` (required dependency)
- `telescope.nvim` (optional, for enhanced UI)

==============================================================================
3. INSTALLATION                                           *hexwitch-installation*

Using lazy.nvim: >
    {
      "yourusername/hexwitch.nvim",
      dependencies = {
        "nvim-lua/plenary.nvim",
        "nvim-telescope/telescope.nvim", -- optional
      },
      config = function()
        require("hexwitch").setup({})
      end,
    }
<

Using packer.nvim: >
    use {
      "yourusername/hexwitch.nvim",
      requires = {
        "nvim-lua/plenary.nvim",
        "nvim-telescope/telescope.nvim", -- optional
      },
      config = function()
        require("hexwitch").setup({})
      end
    }
<

==============================================================================
4. CONFIGURATION                                         *hexwitch-configuration*

Default configuration: >
    {
      openai_api_key = nil,                   -- or OPENAI_API_KEY env var
      model = "gpt-4o-2024-08-06",            -- AI model
      temperature = 0.7,                      -- Creativity level (0.0-1.0)
      timeout = 30000,                        -- Request timeout (ms)
      ui_mode = "input",                      -- "input" or "telescope"
      save_themes = true,                     -- Auto-save generated themes
      themes_dir = "~/.local/share/nvim/hexwitch-themes",
      debug = false                           -- Enable debug logging
    }
<

Configuration parameters: ~
                                                *hexwitch-config-openai_api_key*
openai_api_key (string)    OpenAI API key. Can also be set via the
                           OPENAI_API_KEY environment variable.

                                                *hexwitch-config-model*
model (string)            OpenAI model to use for theme generation.
                           Default: "gpt-4o-2024-08-06"

                                                *hexwitch-config-temperature*
temperature (number)      AI creativity level. Range: 0.0-1.0
                           Higher values create more diverse themes.
                           Default: 0.7

                                                *hexwitch-config-timeout*
timeout (number)          HTTP request timeout in milliseconds.
                           Default: 30000

                                                *hexwitch-config-ui_mode*
ui_mode (string)          UI mode to use: "input" or "telescope"
                           Default: "input"

                                                *hexwitch-config-save_themes*
save_themes (boolean)     Automatically save generated themes.
                           Default: true

                                                *hexwitch-config-themes_dir*
themes_dir (string)       Directory to save generated themes.
                           Default: "~/.local/share/nvim/hexwitch-themes"

                                                *hexwitch-config-debug*
debug (boolean)           Enable debug logging.
                           Default: false

==============================================================================
5. USAGE                                                    *hexwitch-usage*

Basic Usage: >

    :Hexwitch a dark theme with purple accents

Programmatic Usage: >

    -- Generate theme with input prompt
    require("hexwitch").prompt()

    -- Generate theme with specific description
    require("hexwitch").generate("calming blue theme")

    -- Save current theme
    require("hexwitch").save("my-theme")

    -- Load saved theme
    require("hexwitch").load("my-theme")

Example theme descriptions: ~
    "Dark theme with purple accents and good contrast for coding"
    "Light theme inspired by autumn colors, easy on the eyes"
    "High contrast theme optimized for programming in low light"
    "Monochromatic theme with subtle blue highlights"

==============================================================================
6. COMMANDS                                                *hexwitch-commands*

                                                        *:Hexwitch*
:Hexwitch [description]
    Generate and apply a colorscheme. If [description] is provided,
    use it directly; otherwise prompt for input.

Examples: >
    :Hexwitch
    :Hexwitch dark theme with blue highlights
    :Hexwitch warm autumn colors with high contrast
<

==============================================================================
7. FUNCTIONS                                              *hexwitch-functions*

hexwitch.setup(config)                                  *hexwitch.setup()*
    Configure the plugin with user options.
    Parameters: ~
        {config} (table) Configuration options

hexwitch.prompt()                                      *hexwitch.prompt()*
    Prompt user for theme description and generate theme.

hexwitch.generate(description)                          *hexwitch.generate()*
    Generate a theme with specific description.
    Parameters: ~
        {description} (string) Natural language theme description

hexwitch.save(name)                                    *hexwitch.save()*
    Save the current theme.
    Parameters: ~
        {name} (string) Theme name

hexwitch.load(name)                                    *hexwitch.load()*
    Load a saved theme.
    Parameters: ~
        {name} (string) Theme name

hexwitch.list_themes()                                 *hexwitch.list_themes()*
    List all saved themes.
    Returns: (table) Array of theme objects

hexwitch.delete(name)                                  *hexwitch.delete()*
    Delete a saved theme.
    Parameters: ~
        {name} (string) Theme name

==============================================================================
8. API REFERENCE                                            *hexwitch-api*

Core Modules: ~

hexwitch.ai.openai                                    *hexwitch.ai.openai*
    OpenAI API integration module.
    Functions: generate_theme(), test_connection()

hexwitch.theme.applier                                *hexwitch.theme.applier*
    Theme application module.
    Functions: apply_theme(), reset_theme()

hexwitch.theme.storage                                *hexwitch.theme.storage*
    Theme storage management.
    Functions: save_theme(), load_theme(), list_themes()

hexwitch.ui.input                                      *hexwitch.ui.input*
    Input UI module.
    Functions: get_input(), create_input_buffer()

hexwitch.utils.notify                                  *hexwitch.utils.notify*
    Notification system.
    Functions: info(), warn(), error(), success()

==============================================================================
9. TROUBLESHOOTING                                    *hexwitch-troubleshooting*

Common issues and solutions:

API Key Problems: ~
    " Check if API key is set: `:echo $OPENAI_API_KEY`
    " Set API key temporarily: `:let $OPENAI_API_KEY = "sk-key"`

Network Issues: ~
    " Test connectivity: `:!curl -I https://api.openai.com/v1/models`
    " Check timeout settings: `:lua print(require("hexwitch").config.timeout)`

Theme Storage Issues: ~
    " Check directory permissions: `:!ls -la ~/.local/share/nvim/hexwitch-themes`
    " Create directory manually: `:!mkdir -p ~/.local/share/nvim/hexwitch-themes`

Debug Commands: ~
    " View debug logs: `:messages`
    " Check configuration: `:lua print(vim.inspect(require("hexwitch").config))`
    " Test API: `:lua require("hexwitch.ai.openai").test_connection()`

==============================================================================
10. HEALTH CHECK                                         *hexwitch-health*

Check plugin health and configuration: >
    :checkhealth hexwitch
<

The health check verifies:
" OpenAI API key configuration
" Required dependencies (plenary.nvim)
" Optional dependencies (telescope.nvim)
" Theme storage directory permissions
" Network connectivity to OpenAI API

==============================================================================
vim:tw=78:ts=8:ft=help:norl: